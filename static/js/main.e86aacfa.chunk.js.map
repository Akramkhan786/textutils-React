{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","join","prompt","alert","includes","document","getElementById","select","navigator","clipboard","writeText","length","defaultProps","aboutText","Alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e86aacfa.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n              </li> */}\r\n              \r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\n//props types\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired, \r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n// default props\r\nNavbar.defaultProps={\r\n    title: 'Set title here',\r\n    aboutText:'About '\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        \r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Upper Case!\", \"success\")\r\n    }\r\n\r\n    const handleLoClick = ()=>{\r\n        \r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Lower Case!\", \"success\")\r\n    }\r\n\r\n    const handleExtraSpace = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra Spaces Removed!\", \"success\")\r\n    }\r\n\r\n    const handlePresent = ()=>{\r\n        let newText = prompt();\r\n        alert(text.includes(newText));\r\n        props.showAlert(\"Successfully Checked!\", \"success\")\r\n    }\r\n\r\n\r\n    const handleCopy = ()=>{\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text Copied!\", \"success\")\r\n    }\r\n\r\n    const handleClearClick = ()=>{\r\n        //console.log(\"Lower was clicked\" + text);\r\n        let newText = '';\r\n        setText(newText)\r\n        props.showAlert(\"Text Cleared!\", \"success\")\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value)\r\n    }\r\n\r\nconst [text, setText] = useState('');\r\n//text = \"new text\"; //wrong way to change the state\r\n//setText = (\"new text\") //Corect way to change the state we have to use function name \r\n    return (\r\n        <>\r\n    <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n        <h1>{props.heading}  </h1>\r\n<div className=\"mb-3\">\r\n  <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\r\n</div>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to upper case</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to Lower case</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleExtraSpace}>Remove Extra Spaces</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={handlePresent}>Check String Presence</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n            <h2>Your Text Summary</h2>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").length}</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter Something in the Textbox above to Preview it Here\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize =(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n       <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n    \r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n  \n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');//whether dark mode is enable or not \n  const [alert, setAlert] = useState(null);\n\n  const showAlert=(message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\",\"success\");\n      document.title = 'TextUtils - Dark Mode';\n      // setInterval(() => {\n      //   document.title = 'TextUtils is Amazing Mode';\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = 'Install TextUtils Now';\n      // }, 1500);\n    }\n    else{\n\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\",\"success\");\n      document.title = 'TextUtils - Light Mode';\n\n    }\n    \n\n  }\n  return (\n    <>\n{/*  <Navbar  title=\"Textutils\" aboutText=\"About Textutils\"/> */}\n{/* <Navbar  /> */}\n\n{/* <Router> */}\n<Navbar  title=\"Textutils\" mode={mode} toggleMode={toggleMode}/>\n<Alert alert={alert}/>\n<div className=\"container my-3\">\n{/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n          \n          {/* <Route exact path=\"/\"> */}\n          <TextForm showAlert={showAlert} heading=\"Enter The Text To Analyze Below\" mode={mode}/>\n          {/* </Route>\n        </Switch> */}\n</div>\n{/* </Router> */}\n    </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}